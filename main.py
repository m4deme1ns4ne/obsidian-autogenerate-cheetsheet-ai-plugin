import os
import openai
import colorama
import sys
from dotenv import load_dotenv
from pathlib import Path
import re

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
load_dotenv()
AI_API_KEY = os.getenv("OPENAI_API_KEY")
OBSIDIAN_PATH = Path(os.getenv("OBSIDIAN_VAULT_PATH"))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not AI_API_KEY:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω OPENAI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    sys.exit(1)

if not OBSIDIAN_PATH:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω OBSIDIAN_VAULT_PATH –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    sys.exit(1)

colorama.init(autoreset=True)

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
FG = colorama.Fore
ST = colorama.Style

FIRTS_PROMT = r"""
–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º—É–ª –≤ Obsidian –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ LaTeX-—Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:

1. **–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã**
   –§–æ—Ä–º—É–ª—ã –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—Å—Ç–∞ –∑–∞–∫–ª—é—á–∞–π—Ç–µ –≤ –æ–¥–∏–Ω–æ—á–Ω—ã–µ `$`:

   * –ü—Ä–∏–º–µ—Ä: –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `$\mu = \frac{1}{n} \sum x_i$`.

2. **–í—ã–Ω–æ—Å–Ω—ã–µ (–±–ª–æ—á–Ω—ã–µ) —Ñ–æ—Ä–º—É–ª—ã**
   –§–æ—Ä–º—É–ª—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, –æ–±—Ä–∞–º–ª—è–π—Ç–µ –¥–≤–æ–π–Ω—ã–º–∏ `$$` –∏ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ø—Ä–æ–±–µ–ª—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:

   ```
   $$
   \sigma = \sqrt{\frac{\sum (x_i - \mu)^2}{n-1}}
   $$
   ```

3. **–ú–∞—Ç—Ä–∏—Ü—ã**
   –î–ª—è –º–∞—Ç—Ä–∏—Ü –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ `pmatrix` –≤ –±–ª–æ—á–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∞—Ö:

   ```
   $$
   \begin{pmatrix}
   a & b \\
   c & d
   \end{pmatrix}
   $$
   ```

   * –î–≤–æ–π–Ω–æ–π –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª—ç—à `\\` ‚Äî –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É.
   * –°–∏–º–≤–æ–ª `&` ‚Äî –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤.

4. **–ß—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å**

   * –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ `\(...\)` –∏ `\[...\]`.
   * –õ–∏—à–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Å–∏–º–≤–æ–ª—ã –≤–Ω—É—Ç—Ä–∏ —Ñ–æ—Ä–º—É–ª.

5. **–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ**

   * –í—Å–µ –±–ª–æ—á–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –æ—Ç—Å—Ç—É–ø—ã –∏ –ø—Ä–æ–±–µ–ª—ã –¥–æ/–ø–æ—Å–ª–µ `$$`.
   * –§–æ—Ä–º—É–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º–∏ –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.

6. **–ü–æ—è—Å–Ω–µ–Ω–∏—è –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ (ML)**

   * –û–±—ä—è—Å–Ω—è–π—Ç–µ –∫–∞–∂–¥—ã–π —à–∞–≥ –ø–æ–¥—Ä–æ–±–Ω–æ –∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º.
   * –ü—Ä–∏ –≤–≤–æ–¥–µ –Ω–æ–≤—ã—Ö –ø–æ–Ω—è—Ç–∏–π –ø—Ä–∏–≤–æ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è.

**–ü—Ä–∏–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ:**

–î–∏—Å–ø–µ—Ä—Å–∏—è –≤—ã–±–æ—Ä–∫–∏ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫:

$$
 s^2 = \frac{\sum (x_i - \bar{x})^2}{n-1}
$$

–≥–¥–µ:

* \$\bar{x} = \frac{1}{n} \sum x\_i\$ ‚Äî –≤—ã–±–æ—Ä–æ—á–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ;
* \$n\$ ‚Äî —á–∏—Å–ª–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π;
* \$x\_i\$ ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã–±–æ—Ä–∫–∏.

"""

def cprint(text: str, color: str = "WHITE", style: str = "NORMAL") -> None:
    """–ü–µ—á–∞—Ç–∞–µ—Ç 'text' —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–º –∏ —Å—Ç–∏–ª–µ–º"""
    fg = getattr(FG, color.upper(), FG.WHITE)
    st = getattr(ST, style.upper(), ST.NORMAL)
    print(f"{st}{fg}{text}{ST.RESET_ALL}")


def cinput(prompt: str, color: str = "CYAN", style: str = "BRIGHT") -> str:
    """–í—ã–≤–æ–¥–∏—Ç —Ü–≤–µ—Ç–Ω–æ–π prompt –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    fg = getattr(FG, color.upper(), FG.CYAN)
    st = getattr(ST, style.upper(), ST.NORMAL)
    return input(f"{st}{fg}{prompt} {ST.RESET_ALL}")


def generate_cheatsheet(topic: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —à–ø–∞—Ä–≥–∞–ª–∫—É —á–µ—Ä–µ–∑ AI"""
    try:
        client = openai.OpenAI(
            base_url="https://openrouter.ai/api/v1",
            api_key=AI_API_KEY,
        )
        response = client.chat.completions.create(
            model="deepseek/deepseek-chat:free",
            messages=[
                {"role": "system", "content": FIRTS_PROMT},
                {
                    "role": "user",
                    "content": (
                        f"–°–æ–∑–¥–∞–π —à–ø–∞—Ä–≥–∞–ª–∫—É –ø–æ —Ç–µ–º–µ: {topic}. "
                        "–ò—Å–ø–æ–ª—å–∑—É–π –∑–∞–≥–æ–ª–æ–≤–∫–∏ ##, —Å–ø–∏—Å–∫–∏, —Ç–∞–±–ª–∏—Ü—ã –∏ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞. "
                        "–í—Å–µ —Ñ–æ—Ä–º—É–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –±–ª–æ–∫–∞—Ö $$...$$ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –º–∞—Ç—Ä–∏—Ü."
                    ),
                },
            ],
        )
        content = response.choices[0].message.content.strip()
        return content
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}")
        raise


def update_cheatsheet(original: str, instruction: str) -> str:
    """–£–ª—É—á—à–∞–µ—Ç –∏–ª–∏ —É–ø—Ä–æ—â–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —à–ø–∞—Ä–≥–∞–ª–∫—É –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    try:
        client = openai.OpenAI(
            base_url="https://openrouter.ai/api/v1",
            api_key=AI_API_KEY,
        )
        response = client.chat.completions.create(
            model="deepseek/deepseek-chat:free",
            messages=[
                {
                    "role": "system",
                    "content": (
                        f"–í–æ—Ç –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å. –í–æ—Ç —Ç–µ–∫—É—â–∞—è —à–ø–∞—Ä–≥–∞–ª–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å:\n{original}"
                    ),
                },
                {
                    "role": "user",
                    "content": (f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {instruction}."),
                },
            ],
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {str(e)}")
        raise


def save_to_obsidian(filename: str, content: str) -> None:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É Obsidian"""
    try:
        file_path = OBSIDIAN_PATH / f"{filename}.md"
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {file_path}")
        with open(file_path, "w", encoding="utf-8") as f:
            f.write(content)
        cprint(f"‚úÖ –®–ø–∞—Ä–≥–∞–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {file_path}", color="GREEN", style="BRIGHT")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}")
        raise


def fix_latex_blocks(text: str) -> str:
    # –ó–∞–º–µ–Ω–∏—Ç—å \[ ... \] –Ω–∞ $$ ... $$
    text = re.sub(r'\\\[(.*?)\\\]', r'$$\1$$', text, flags=re.DOTALL)
    # –ó–∞–º–µ–Ω–∏—Ç—å \( ... \) –Ω–∞ $ ... $
    text = re.sub(r'\\\((.*?)\\\)', r'$\1$', text, flags=re.DOTALL)
    return text


def main() -> None:
    try:
        # –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
        if len(sys.argv) > 1:
            topic = sys.argv[1]
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            if len(sys.argv) > 2:
                content = sys.argv[2]
                save_to_obsidian(filename=topic, content=content)
                return
        else:
            topic = cinput(
                "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–ø–∞—Ä–≥–∞–ª–∫–∏:", color="YELLOW", style="BRIGHT"
            )

        content = generate_cheatsheet(topic)
        content = fix_latex_blocks(content)
        print(content)  # –í—ã–≤–æ–¥–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è TypeScript

    except KeyboardInterrupt:
        cprint("\nüëã –ü–æ–∫–∞! <3", color="RED", style="BRIGHT")
    except Exception as e:
        cprint(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", color="RED", style="BRIGHT")
        sys.exit(1)


if __name__ == "__main__":
    main()
